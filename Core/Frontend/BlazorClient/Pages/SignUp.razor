@page "/signup";
@inject HttpClient Http;
@inject IJSRuntime Js;
@using BlazorClient.Models;

<EditForm Model="@blog">
    <div class="form-group">
        <label for="inputEmail">Email address</label>
        <input type="email" @bind="blog.Email" class="form-control" id="inputEmail" aria-describedby="emailHelp"
            placeholder="Enter email">
        <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
    </div>
    <div class="form-group">
        <label for="inputName">Blog's Name</label>
        <input type="text" @bind="blog.Name" class="form-control" id="inputName" placeholder="Enter Name">
    </div>
    <div class="form-group">
        <label for="inputUrl">URL ID</label>
        <input type="text" @bind="blog.BlogUrl" class="form-control" id="inputUrl" placeholder="Write the ID you want">
    </div>
    <div class="form-group">
        <label for="inputAuthor">Your Name</label>
        <input type="text" @bind="blog.Author" class="form-control" id="inputAuthor" placeholder="Enter Category">
    </div>
    <div class="form-group">
        <label for="inputCategory">Category Name</label>
        <input type="text" @bind="blog.Category" class="form-control" id="inputCategory" placeholder="Enter Category">
    </div>
    <button class="btn btn-primary" @onclick="AddBlog">Submit</button>
</EditForm>

@code 
{
    public Blog blog;

    protected override void OnInitialized()
    {
        blog = new Blog();
    }

    private async Task AddBlog()
    {
        try
        {
            var response = await Http
            .PostAsJsonAsync<Blog>("https://blog-engine-api.herokuapp.com/api/blogs", blog);

            var created = await response.Content.ReadFromJsonAsync<Blog>();

            var success = await Js.InvokeAsync<JsonContent>("alert", 
                $"Registration was successfull! Here's your token: \n{created.Token}\nSave it and keep. It grants you access to your blog.");
        }
        catch (NullReferenceException ex)
        {
            Console.WriteLine("Blog is empty");
            return;
        }
    }
}